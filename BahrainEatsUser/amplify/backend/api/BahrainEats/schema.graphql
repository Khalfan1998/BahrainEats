type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  deliveryFee: Float!
  minDeliveryTime: Int!
  maxDeliveryTime: Int!
  rating: Float
  address: String!
  lat: Float!
  lng: Float!
  Dishes: [Dish] @hasMany(indexName: "byRestaurant", fields: ["id"])
}

type BasketDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: String
  basketID: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  sub: String
  name: String
  address: String
  lat: String
  lng: String
}

type Dish @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  description: String
  price: Float!
  restaurantID: ID! @index(name: "byRestaurant")
}

type OrderDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  orderID: String
}

enum OrderStatus {
  NEW
  COOKING
  READY_FOR_PICKUP
  PICKED_UP
  COMPLETED
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: String
  status: OrderStatus
}

type Basket @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: String
  restaurantID: String
}
